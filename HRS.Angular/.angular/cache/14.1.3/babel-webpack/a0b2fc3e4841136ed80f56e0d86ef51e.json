{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../department.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"DepartmentNameInput\"];\n\nfunction DepartmentsEditComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.errorMessage, \" \");\n  }\n}\n\nexport let DepartmentsEditComponent = /*#__PURE__*/(() => {\n  class DepartmentsEditComponent {\n    constructor(Deptservice, route, router) {\n      this.Deptservice = Deptservice;\n      this.route = route;\n      this.router = router;\n      this.pageTitle = 'Edit Department';\n      this.errorMessage = '';\n    }\n\n    ngOnInit() {\n      this.sub = this.route.paramMap.subscribe(params => {\n        const id = +params.get('id');\n        this.getDepartment(id);\n      });\n    }\n\n    ngOnDestroy() {\n      this.sub.unsubscribe();\n    }\n\n    getDepartment(id) {\n      this.Deptservice.GetDepartment(id).subscribe({\n        next: department => this.displayDepartment(department),\n        error: err => this.errorMessage = err\n      });\n    }\n\n    displayDepartment(department) {\n      this.department = department;\n\n      if (this.department.id === 0) {\n        this.pageTitle = 'Add department';\n      } else {\n        this.pageTitle = `Edit department: ${this.department.departmentName}`;\n      }\n    }\n\n    deleteDepartment() {\n      if (this.department.id === 0) {\n        // Don't delete, it was never saved.\n        this.onSaveComplete();\n      } else {\n        if (confirm(` delete the department: ${this.department.departmentName}?`)) {\n          this.Deptservice.deleteDepartment(this.department.id).subscribe({\n            next: () => this.onSaveComplete(),\n            error: err => this.errorMessage = err\n          });\n        }\n      }\n    }\n\n    saveDepartment() {\n      const d = this.department;\n      d.departmentName = this.nameInputRef.nativeElement.value;\n\n      if (d.id === 0) {\n        this.Deptservice.createDepartment(d).subscribe({\n          next: () => this.onSaveComplete(),\n          error: err => this.errorMessage = err\n        });\n      } else {\n        this.Deptservice.updateDepartment(d).subscribe({\n          next: () => this.onSaveComplete(),\n          error: err => this.errorMessage = err\n        });\n      }\n    }\n\n    onSaveComplete() {\n      // Reset the form to clear the flags\n      this.router.navigate(['/departments']);\n    }\n\n  }\n\n  DepartmentsEditComponent.ɵfac = function DepartmentsEditComponent_Factory(t) {\n    return new (t || DepartmentsEditComponent)(i0.ɵɵdirectiveInject(i1.Departmentservice), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  DepartmentsEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DepartmentsEditComponent,\n    selectors: [[\"app-departments-edit\"]],\n    viewQuery: function DepartmentsEditComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nameInputRef = _t.first);\n      }\n    },\n    decls: 23,\n    vars: 2,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"row\"], [1, \"col-xs-12\"], [1, \"col-sm-5\", \"form-group\"], [\"for\", \"DepartmentName\"], [\"type\", \"text\", \"id\", \"DepartmentName\", 1, \"form-control\"], [\"DepartmentNameInput\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"]],\n    template: function DepartmentsEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"form\")(7, \"div\", 3)(8, \"div\", 5)(9, \"label\", 6);\n        i0.ɵɵtext(10, \"DepartmentName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7, 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(13, \"br\");\n        i0.ɵɵelementStart(14, \"div\", 3)(15, \"div\", 4)(16, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function DepartmentsEditComponent_Template_button_click_16_listener() {\n          return ctx.saveDepartment();\n        });\n        i0.ɵɵtext(17, \"Add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 10);\n        i0.ɵɵtext(19, \"Delete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 11);\n        i0.ɵɵtext(21, \"Clear\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵtemplate(22, DepartmentsEditComponent_div_22_Template, 2, 1, \"div\", 12);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.pageTitle, \" \");\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm]\n  });\n  return DepartmentsEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}