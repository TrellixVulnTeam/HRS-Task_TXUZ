{"ast":null,"code":"import { catchError, tap, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let Departmentservice = /*#__PURE__*/(() => {\n  class Departmentservice {\n    /**\r\n     *\r\n     */\n    constructor(http) {\n      this.http = http;\n      this.DepartmentUrl = 'https://localhost:44396/Department';\n    }\n\n    GetDepartment() {\n      return this.http.get(this.DepartmentUrl).pipe(tap(data => console.log('All', JSON.stringify(data))), catchError(this.handleError));\n    }\n\n    handleError(err) {\n      // in a real world app, we may send the server to some remote logging infrastructure\n      // instead of just logging it to the console\n      let errorMessage = '';\n\n      if (err.error instanceof ErrorEvent) {\n        // A client-side or network error occurred. Handle it accordingly.\n        errorMessage = `An error occurred: ${err.error.message}`;\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n      }\n\n      console.error(errorMessage);\n      return throwError(() => errorMessage);\n    }\n\n  }\n\n  Departmentservice.ɵfac = function Departmentservice_Factory(t) {\n    return new (t || Departmentservice)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  Departmentservice.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Departmentservice,\n    factory: Departmentservice.ɵfac\n  });\n  return Departmentservice;\n})();","map":null,"metadata":{},"sourceType":"module"}