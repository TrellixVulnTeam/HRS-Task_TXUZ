{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../department.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = [\"f\"];\n\nfunction DepartmentsEditComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DepartmentsEditComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, DepartmentsEditComponent_div_15_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r1 = i0.ɵɵreference(14);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"required\"]);\n  }\n}\n\nfunction DepartmentsEditComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r3.errorMessage, \" \");\n  }\n}\n\nexport let DepartmentsEditComponent = /*#__PURE__*/(() => {\n  class DepartmentsEditComponent {\n    constructor(Deptservice, route, router) {\n      this.Deptservice = Deptservice;\n      this.route = route;\n      this.router = router;\n      this.disableDeleteButton = false;\n      this.AddText = 'Edit';\n      this.pageTitle = 'Edit Department';\n      this.errorMessage = '';\n    }\n\n    ngOnInit() {\n      this.sub = this.route.paramMap.subscribe(params => {\n        const id = +params.get('id');\n        this.getDepartment(id);\n      });\n    }\n\n    ngOnDestroy() {\n      this.sub.unsubscribe();\n    }\n\n    getDepartment(id) {\n      this.Deptservice.GetDepartment(id).subscribe({\n        next: department => this.displayDepartment(department),\n        error: err => this.errorMessage = err\n      });\n    }\n\n    displayDepartment(department) {\n      this.department = department;\n\n      if (this.department.id === 0) {\n        this.pageTitle = 'Add department';\n        this.AddText = 'Add';\n        this.disableDeleteButton = true;\n      } else {\n        this.pageTitle = `Edit department: ${this.department.departmentName}`;\n        this.departmentName = this.department.departmentName; // this.nameInputRef.nativeElement.value = this.department.departmentName;\n\n        this.disableDeleteButton = false;\n      }\n    }\n\n    deleteDepartment() {\n      if (this.department.id === 0) {\n        // Don't delete, it was never saved.\n        this.onSaveComplete();\n      } else {\n        if (confirm(` delete the department: ${this.department.departmentName}?`)) {\n          this.Deptservice.deleteDepartment(this.department.id).subscribe({\n            next: () => this.onSaveComplete(),\n            error: err => this.errorMessage = err\n          });\n        }\n      }\n    }\n\n    onSubmit() {\n      const d = this.department; // d.departmentName =this.nameInputRef.nativeElement.value;\n\n      if (d.id === 0) {\n        this.Deptservice.createDepartment(d).subscribe({\n          next: () => this.onSaveComplete(),\n          error: err => this.errorMessage = err\n        });\n      } else {\n        this.Deptservice.updateDepartment(d).subscribe({\n          next: () => this.onSaveComplete(),\n          error: err => this.errorMessage = err\n        });\n      }\n    }\n\n    onSaveComplete() {\n      this.deptForm.reset();\n      this.router.navigate(['./department']);\n    }\n\n    clearDepartment() {\n      this.deptForm.reset();\n      this.router.navigate(['./department']);\n    }\n\n  }\n\n  DepartmentsEditComponent.ɵfac = function DepartmentsEditComponent_Factory(t) {\n    return new (t || DepartmentsEditComponent)(i0.ɵɵdirectiveInject(i1.Departmentservice), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  DepartmentsEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DepartmentsEditComponent,\n    selectors: [[\"app-departments-edit\"]],\n    viewQuery: function DepartmentsEditComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.deptForm = _t.first);\n      }\n    },\n    decls: 26,\n    vars: 7,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"row\"], [1, \"col-xs-12\"], [3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"col-sm-5\", \"form-group\"], [\"for\", \"DepartmentName\"], [\"type\", \"text\", \"id\", \"DepartmentName\", \"name\", \"DepartmentName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n    template: function DepartmentsEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"hr\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"form\", 5, 6);\n        i0.ɵɵlistener(\"ngSubmit\", function DepartmentsEditComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"div\", 7)(11, \"label\", 8);\n        i0.ɵɵtext(12, \"DepartmentName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 9, 10);\n        i0.ɵɵlistener(\"ngModelChange\", function DepartmentsEditComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.departmentName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(15, DepartmentsEditComponent_div_15_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵelementStart(17, \"div\", 3)(18, \"div\", 4)(19, \"button\", 12);\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function DepartmentsEditComponent_Template_button_click_21_listener() {\n          return ctx.deleteDepartment();\n        });\n        i0.ɵɵtext(22, \"Delete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function DepartmentsEditComponent_Template_button_click_23_listener() {\n          return ctx.clearDepartment();\n        });\n        i0.ɵɵtext(24, \"Clear\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵtemplate(25, DepartmentsEditComponent_div_25_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(8);\n\n        const _r1 = i0.ɵɵreference(14);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.pageTitle, \" \");\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.departmentName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r1.invalid && (_r1.dirty || _r1.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.AddText);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.disableDeleteButton);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i4.NgIf],\n    styles: [\"input.ng-invalid.ng-touched[_ngcontent-%COMP%]{border:1px solid red}\"]\n  });\n  return DepartmentsEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}